<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>:)</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on :)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 29 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>First Death</title>
      <link>http://localhost:1313/writing/first_death/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/writing/first_death/</guid>
      <description>Brothers and sisters, the testimony and first death of Ade.
When I came here, I had no future, no purpose no plans, nothing. I was a walking husk. That is until i met our Lord. He took this empty worthless life and gave it purpose, I now know that my essence is to service him, to dedicate my very being to his magnificence and grace. In that, I have meaning.In that I am complete.</description>
      <content>&lt;p&gt;Brothers and sisters, the testimony and first death of Ade.&lt;/p&gt;
&lt;p&gt;When I came here, I had no future, no purpose no plans, nothing. I was a walking husk. That is until i met our Lord. He took this empty worthless life and gave it purpose, I now know that my essence is to service him, to dedicate my very being to his magnificence and grace. In that, I have meaning.In that I am complete.&lt;/p&gt;
&lt;p&gt;I am here to make a sacrifice of the old to bring in the new, today the old Ade dies. In the final hours of my former life, I opened my old journal, a record of the nothing I used to be. I want you to see who I was, so you can see what he has done. Read, and witness the first death of Ade.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11th February 2023&lt;/strong&gt; &lt;br&gt;
I don’t know why i still make these. There’s not a lot in my life to write about. Mostly I just exist. I eat. I sleep. I scroll. I breathe — somehow. I got kicked out of school today. Honestly? I don’t really care. I was never any good at it. They called it a “final warning.” I guess I finally ran out of chances to disappoint them. The dean asked me today what I was going to do next, like there’s supposed to be some back up plan for getting kicked out of university, There’s not, There’s just… this, Whatever “this” is&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;20th February 2023&lt;/strong&gt; &lt;br&gt;
Today’s quote from Mr father of the year was “her dying for you was a waste”. Usually the stupid things he says don&amp;rsquo;t really get to me, he’s usually drunk out of his mind most of the time, but this one kind of hurt. I don&amp;rsquo;t blame him much though, he lost the love of his life giving birth to a dumbass who cant seem to do anything right. I’d probably hate me too if i were him. Sometimes I wish i could do more you know, actually make her sacrifice for me worth something, but I&amp;rsquo;ve tried and I&amp;rsquo;ve failed and i’m done trying. Some people just aren’t worth it and I think i’m just one of those people&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2nd March 2023&lt;/strong&gt; &lt;br&gt;
This man is intolerable. Every day since I got back he’s managed to invent new ways of reminding me that i’m a failure. As if I could ever forget. I guess dropping out of school just confirmed it for him. He brought up the mom thing again today, said I killed her by being born. I told him that if he didn’t want to lose his wife maybe he shouldn’t have knocked her up in the first place. He lost it and told me to leave the house. He basically says that every week but this time i’m fed up with his shit and i’m actually leaving.
Someone from school gave me a flyer for this charity place that takes in “people like me”. He said they don’t ask questions, and there’s always food, always beds. I don’t have a better plan, so I’m going to check it out.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12th March 2023&lt;/strong&gt; &lt;br&gt;
My first few days here have been interesting. It’s so weird to me how these random people who don’t know me at all can just take me in, No questions. It makes me believe there’s at least a little kindness left in the world. It’s either that or they’re trying to sell me for parts or something. I’m supposed to meet this guy named alpha tomorrow, he’s the guy that runs this place, probably some rich philanthropist or something. That’s the only way they could possibly keep this kind of place running.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13th March 2023&lt;/strong&gt; &lt;br&gt;
I talked to alpha today, it was … something. We talked about my problems. My life. All the stuff I usually try not to think about.
You know when someone just sees you, not the mess you’ve mAde of everything, but the part underneath it all? Maybe that’s what therapy is supposed to feel like. Apparently he had the same problems when he was my age. A shitty dad and no real sense of worth. He says all I need to do to become better is to “shed the false self”. That the part of me that&amp;rsquo;s broken isn&amp;rsquo;t me, it&amp;rsquo;s something that was forced on me. That I can be whole if I’m willing to let the old me die. I don’t really know what that means yet
but looking at him, at how sure he is and how people follow him like he’s the sun. I guess if someone like him could come from someone like me, maybe there’s hope for me too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;30th April 2023&lt;/strong&gt; &lt;br&gt;
My dad called today, Well - he called the house phone. We’re not really supposed to have phones here.They say it helps us stay present. I’m wondering how he even found the number.
Apparently he wants me to come back home, says he’s working on himself and he’s going to do better as a father, It was so weird hearing that, didn’t really sound like him, at least the version of him that i’m used to, Maybe my leaving for good was all it took to reset his head. Alpha listened in on the conversation and he’s not happy about it. He says that I’ve been able to do a lot of healing and growing these past weeks and reconnecting with him would undo everything. He thinks i should cut him off entirely because people like my dad never change. I’m not entirely sure how to feel about that, I guess deep down i’m holding out a little hope for him.
We agreed I could make one last call, just for closure.
When i spoke to him again, he said he knew he wasn’t worth it, begged me it do it for mum, that she’d want us to be together.
I’m still thinking about it. But I think I already know what I’m going to do.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1st May 2023&lt;/strong&gt; &lt;br&gt;
Alpha’s apparently really proud of me. He says I’m ready to go for enlightenment camp. It’s this program that runs for a few weeks, kind of like a retreat. Honestly i haven’t been looking forward to it much. I don’t exactly do well in class environments and that’s what this seems like, but everyone here keeps talking about how important it is and how it changed their lives so i think i’m going to give it a shot. I’m not really allowed to carry any personal stuff there, they say it’s supposed to help me focus. so I wont really be writing here for a while&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;14th May 2023&lt;/strong&gt; &lt;br&gt;
I don’t have a lot of time, I just needed to write, to make sense of .. everything. Enlightenment camp is nothing like i expected. There’s No clocks, No mirrors. No sense of where we are, or how long we’ve been there. The windows are too high to see out of.
We fast most days, they call it quieting, a way to silence the body so the soul can listen. At first i thought it was insane, people were passing out, crying in sessions, everyone was screaming and chanting, it was just crazy.
&lt;br&gt;
Some days, it feels like I’m starting to understand. Like I’ve peeled something off myself, something rotten. Other days, I feel hollow in a way that scares me, I haven’t eaten in so long and the chants echo in my head even when it’s silent.
I don’t feel like myself. I don’t know if that’s part of the process or if something’s gone wrong. Alpha says confusion is good. That doubt is proof the old self is dying. That feels right. I think. Still, I had to step out just for a second, to breathe something that’s not recycled air and incense. I probably wasn’t supposed to, but I needed to see myself again, even if just through these pages.
I don’t know when I’ll be able to write again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;31st May 2023&lt;/strong&gt; &lt;br&gt;
I can’t. I can’t do this anymore. If I go back in there, I think I might actually die. I’ll just talk to Alpha. He’ll understand. He usually does. I just need to leave for a while — clear my head, breathe real air again.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I found him outside the hall. told him everything. He said something i don’t think i’m going to forget in a while
&lt;br&gt;
&amp;ldquo;There’s no one out there for you, Ade. No one who can save you. No one who even wants you.&amp;rdquo;
&lt;br&gt;
He said the only way out is through. That if I leave now, everything I’ve fought for dies. That I die.
I think he’s right. there’s nothing left for me but this. &lt;br&gt;
I’m going back in.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Building Evo Part 2</title>
      <link>http://localhost:1313/programming/evo_part_2/</link>
      <pubDate>Tue, 07 Jan 2025 05:57:12 +0100</pubDate>
      
      <guid>http://localhost:1313/programming/evo_part_2/</guid>
      <description>On todays&amp;rsquo; episode of building evo, i&amp;rsquo;m going over the basic sdl2 implementation, Hopefully you&amp;rsquo;ve read the first post and you know what evo is, and you also know that i moved from using sdl2 to bevy. This post is just going over what i was able to do before switching because i think that might be interesting to read.
That said, I didn&amp;rsquo;t really go far with using sdl2. I implemented basic graphics and a view for the organisms, organism tracking within the environment, and wall stacking (ONLY for organisms going in the same direction).</description>
      <content>&lt;p&gt;On todays&amp;rsquo; episode of building evo, i&amp;rsquo;m going over the basic sdl2 implementation, Hopefully you&amp;rsquo;ve read the first &lt;a href=&#34;https://aybdee.xyz/posts/evo_part_1/&#34;&gt;post&lt;/a&gt; and you know what evo is, and you also know that i moved from using sdl2 to bevy. This post is just going over what i was able to do before switching because i think that might be interesting to read.&lt;/p&gt;
&lt;p&gt;That said, I didn&amp;rsquo;t really go far with using sdl2. I implemented basic graphics and a view for the organisms, organism tracking within the environment, and wall stacking (ONLY for organisms going in the same direction). Getting organisms to stack on walls was a real pain, it took more than a month(including procrastination time) to figure out, or maybe it&amp;rsquo;s a skill issue.&lt;/p&gt;
&lt;h2 id=&#34;basic-setup&#34;&gt;Basic Setup&lt;/h2&gt;
&lt;p&gt;First thing to look at is my window and running loop setup, if you&amp;rsquo;re not really familiar with using sdl2 and this doesn&amp;rsquo;t really make sense, you can look at &lt;a href=&#34;https://wiki.libsdl.org/SDL2/Tutorials&#34;&gt;this&lt;/a&gt;. It&amp;rsquo;s a really nice resource that can hopefully help.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::thread::sleep;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::time::Duration;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; graphics::Renderer;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; sdl2::event::Event;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; sdl2::keyboard::Keycode;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; sdl2::pixels::Color;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; sdl2::rect::Point;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SCREEN_WIDTH&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;//num columns(x)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SCREEN_HEIGHT&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;//num rows(y)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FPS&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;u64&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; sdl_context &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sdl2::init()&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; video_subsystem &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sdl_context.video()&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; video_subsystem
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .window(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Evo - natural selection&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;SCREEN_WIDTH&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;SCREEN_HEIGHT&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .opengl()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .build()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .map_err(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; e.to_string())&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; event_pump &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sdl_context.event_pump()&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; point_size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; renderer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Renderer::new(window, point_size)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;#39;running&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; event &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; event_pump.poll_iter() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;match&lt;/span&gt; event {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Event::Quit { &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Event::KeyDown {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    keycode: Some(Keycode::Escape),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                } &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; &amp;#39;running,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                _ &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sleep(Duration::from_millis(&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ok(())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I dont think there&amp;rsquo;s too much to talk about here, i&amp;rsquo;m using the rust_sdl2 crate with the opengl backend for rendering. I setup some constants for the whole rendering process. Also, I kept mixing up the rows,columns and x-y coordinates throughout the code(I think i&amp;rsquo;m window dyslexic). So I had to literally comment &amp;ldquo;WIDTH means number of columns that means x&amp;rdquo; so i wouldn&amp;rsquo;t forget. for now the running loop is just sleeping till you press the escape key then it quits. One weird thing i randomly noticed though is that if you dont put a sleep in the running loop then it crashes instead of closing, this probably happens because we&amp;rsquo;re not giving sdl2 enough time to process events properly(i&amp;rsquo;m just speculating, couldn&amp;rsquo;t really find any resources on this)&lt;/p&gt;
&lt;h2 id=&#34;environment-and-organism-representation&#34;&gt;Environment and Organism Representation&lt;/h2&gt;
&lt;p&gt;The environment is basically a 2-dimensional grid where each cell in the grid can only hold one organism and organisms are represented with the &lt;strong&gt;Organism&lt;/strong&gt; struct that stores the colour and cell index for the organism. I&amp;rsquo;m also keeping a map of each organism to it&amp;rsquo;s index, I thought having the Grid work with just indices instead of storing the organisms directly in the grid was better because it allowed for a nicer seperation of concerns and I felt that the Organism struct would only get more and more complex. I didn&amp;rsquo;t want a situation where i&amp;rsquo;d have to keep changing the grid implementation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;State&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; grid: &lt;span style=&#34;color:#a6e22e&#34;&gt;Grid&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; organisms: &lt;span style=&#34;color:#a6e22e&#34;&gt;HashMap&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;, Organism&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; ids: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug, Clone)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Organism&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; position: &lt;span style=&#34;color:#a6e22e&#34;&gt;CellIndex&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; color: &lt;span style=&#34;color:#a6e22e&#34;&gt;Color&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Grid&lt;/strong&gt; is a custom grid type i implemented to make stuff easier, I implemented display for it to make debugging a bit easier. I also added some utilities that i thought would be helpful.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug, Clone)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Grid&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; cells: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Cell&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; num_rows: &lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; num_cols: &lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Clone, Debug)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Cell&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; value: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;impl&lt;/span&gt; fmt::Display &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Grid {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;self, f: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mut&lt;/span&gt; fmt::Formatter&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&amp;#39;_&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;::Result {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; grid_display: String &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .cells
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .iter()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .map(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; row: String &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    .iter()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    .map(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;cell&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; (cell.value).to_string() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    .collect();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                format!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{row}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .collect();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        write!(f, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{grid_display}&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;impl&lt;/span&gt; Grid {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt;(row_size: &lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;, column_size: &lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Self&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;self, index: &lt;span style=&#34;color:#a6e22e&#34;&gt;CellIndex&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Cell&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;set_cell&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self, index: &lt;span style=&#34;color:#a6e22e&#34;&gt;CellIndex&lt;/span&gt;, id: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unset_cell&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self, index: &lt;span style=&#34;color:#a6e22e&#34;&gt;CellIndex&lt;/span&gt;) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;set_cells&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self, updates: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(CellIndex, &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unset_cells&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self, cells: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;CellIndex&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;shape&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;self) -&amp;gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_set&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;self, index: &lt;span style=&#34;color:#a6e22e&#34;&gt;CellIndex&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num_set&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;self) -&amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;rendering&#34;&gt;Rendering&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m drawing everything for this on an SDL2 canvas, because i googled how to draw rectangles in sdl2 and that was what came up. I think there are other ways to do this, off the top of my head you could also use a texture, and i think that&amp;rsquo;s actually more performant because textures are stored and processed on the GPU. To make the drawing process a bit easier I made a nice Renderer struct to just abstract over the basic drawing functionalities you&amp;rsquo;d need. it takes a WindowCanvas and a point size variable which represents the size of individual points on the canvas(a point in the canvas corresponds to an organism so the point size just corresponds to the size of each organism on screen). In retrospect i wonder why i passed an owned WindowCanvas instead of a mutable reference, probably to avoid working with lifetimes. (I&amp;rsquo;m lazy like that).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Renderer&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; canvas: &lt;span style=&#34;color:#a6e22e&#34;&gt;WindowCanvas&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; point_size: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt;(window: &lt;span style=&#34;color:#a6e22e&#34;&gt;Window&lt;/span&gt;, point_size: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;) -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Self, String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw_dot&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self, point: &lt;span style=&#34;color:#a6e22e&#34;&gt;Point&lt;/span&gt;, color: &lt;span style=&#34;color:#a6e22e&#34;&gt;Color&lt;/span&gt;) -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw_rect&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    point: &lt;span style=&#34;color:#a6e22e&#34;&gt;Point&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    width: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    height: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    color: &lt;span style=&#34;color:#a6e22e&#34;&gt;Color&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_size&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;self) -&amp;gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clear&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;present&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self) {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_rect&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;self, rect_width: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;, rect_height: &lt;span style=&#34;color:#66d9ef&#34;&gt;u32&lt;/span&gt;, x: &lt;span style=&#34;color:#66d9ef&#34;&gt;i32&lt;/span&gt;, y: &lt;span style=&#34;color:#66d9ef&#34;&gt;i32&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Rect&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;render_text&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self, text: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;str&lt;/span&gt;, font: &lt;span style=&#34;color:#a6e22e&#34;&gt;Font&lt;/span&gt;, position: &lt;span style=&#34;color:#a6e22e&#34;&gt;Point&lt;/span&gt;) -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By the way, rendering text on sdl2 is honestly really annoying to do(one of the reasons why i switched to using bevy), here&amp;rsquo;s the render_text function for context&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;render_text&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self, text: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;str&lt;/span&gt;, font: &lt;span style=&#34;color:#a6e22e&#34;&gt;Font&lt;/span&gt;, position: &lt;span style=&#34;color:#a6e22e&#34;&gt;Point&lt;/span&gt;) -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; texture_creator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self.canvas.texture_creator();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; surface &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; font
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .render(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .blended(Color::&lt;span style=&#34;color:#66d9ef&#34;&gt;RGBA&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .map_err(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; e.to_string())&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; texture &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; texture_creator
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .create_texture_from_surface(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;surface)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .map_err(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; e.to_string())&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; TextureQuery { width, height, &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; texture.query();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// If the text is too big for the screen, downscale it (and center regardless)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self.get_rect(width, height, position.x(), position.y());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    self.canvas.copy(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;texture, None, Some(target))&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Ok(());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;What do you mean there&amp;rsquo;s no write function that just puts the text on the screen, are we in the stone ages ?&lt;/p&gt;
&lt;p&gt;Anyways, I pass a reference to the &lt;strong&gt;Renderer&lt;/strong&gt; into &lt;strong&gt;State&lt;/strong&gt; like so.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[derive(Debug)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;State&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;#39;a&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; renderer: Option&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;#39;a&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; Renderer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In Retrospect, I feel like I could have handled that a bit better because conceptually, the renderer isn&amp;rsquo;t really attached to the state in any meaningful way, it just feels like baggage on the type. I guess at the time it was probably the easiest thing to do
something else i could have done is maybe pass the renderer as an argument to a draw function in the struct, something like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;impl&lt;/span&gt; State{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw&lt;/span&gt;(renderer: &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mut&lt;/span&gt; Renderer)&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;weirdly enough i have a really similar function already implemented in the struct called display so i wonder why that didn&amp;rsquo;t come to mind.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;impl&lt;/span&gt; State{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;display&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self) -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//check to see if renderer is attached
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; rng &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand::thread_rng();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;match&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self.renderer {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Some(renderer) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                renderer.clear();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; organism_entry &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; self.organisms.iter() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; (x, y) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; organism_entry.&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;position;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    renderer.draw_dot(Point::new(x &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;i32&lt;/span&gt;, y &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;i32&lt;/span&gt;), organism_entry.&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;color)&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                renderer.present();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Ok(())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            None &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; Err(String::from(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;renderer not attached&amp;#34;&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clear_display&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; self) -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;updated-running-loop&#34;&gt;Updated Running Loop&lt;/h2&gt;
&lt;p&gt;I updated the running loop to re-render the organisms on each iteration like so&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pub&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() -&amp;gt; Result&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(), String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;#39;running&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        environment.display()&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sleep(Duration::from_millis(&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I think i&amp;rsquo;ll stop here for now, don&amp;rsquo;t want to make this too long&lt;/p&gt;
&lt;p&gt;Till next time.&lt;/p&gt;
&lt;p&gt;Authors Note - I mixed up the rows and columns while i was writing this 😭, i need help.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>To Feel</title>
      <link>http://localhost:1313/writing/to_feel/</link>
      <pubDate>Tue, 05 Nov 2024 05:57:12 +0100</pubDate>
      
      <guid>http://localhost:1313/writing/to_feel/</guid>
      <description>When it first got out that I cut myself, the question I got asked the most was why. My parents, my friends—none of them could understand it. Why would you do something that physically harmed you over and over? Didn’t you feel the pain? Well, of course it hurts. That’s why I do it. I do it because sometimes it seems like pain is the only way I can feel anything.</description>
      <content>&lt;p&gt;When it first got out that I cut myself, the question I got asked the most was why. My parents, my friends—none of them could understand it. Why would you do something that physically harmed you over and over? Didn’t you feel the pain? Well, of course it hurts. That’s why I do it. I do it because sometimes it seems like pain is the only way I can feel anything.&lt;/p&gt;
&lt;p&gt;What is feeling anyway? It’s this random thing that we take for granted. We all just feel feelings, and that’s that. Happy, angry, bored. The feelings we feel are what make life worth living. We experience a lot of things in life, but it&amp;rsquo;s usually the emotions attached to those things that we remember most.&lt;/p&gt;
&lt;p&gt;For a while now, I haven’t been able to feel anything. The things that made me happy or upset, the feeling of love, of joy—just everything. It’s all been replaced with numbness, like this empty feeling. I guess emptiness is a feeling in its own way. Maybe that’s a bit of a consolation. I’m not a psychopath or anything. I know when to laugh or smile, and I’m pretty good with consoling people when they’re sad. I guess if you knew me personally, you probably wouldn’t notice. Most people around me didn’t, anyways—that is, until they saw the cuts.&lt;/p&gt;
&lt;p&gt;When I tell people I feel numb, they always ask what caused it, or maybe who. And the thing is, I don’t really know. I just started waking up each morning feeling a little down, and it got worse and worse until we got here. In some ways, I cut to give my problems meaning. If I’m a normal guy with okay parents and decent friends feeling down, then it’s not really that big of a deal. But if I’m the guy who, despite seeming okay, was going through something so terrible inside that it caused him to hurt himself—then the problems become real. Cutting helped me feel like what I was going through was real in a way.&lt;/p&gt;
&lt;p&gt;I guess the last question I get asked is why pain. Why did I, for some reason, feel like pain was the only thing I was capable of feeling? Well, it’s because pain is pretty straightforward. Our bodies always feel it. A knife cut will hurt like a bitch whether you’re depressed or the happiest person alive. There’s a kind of certainty to it, it’s comforting.&lt;/p&gt;
&lt;p&gt;#disclaimer - this does not reflect my personal experiences&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Building Evo Part 1</title>
      <link>http://localhost:1313/programming/evo_part_1/</link>
      <pubDate>Sat, 26 Oct 2024 05:57:12 +0100</pubDate>
      
      <guid>http://localhost:1313/programming/evo_part_1/</guid>
      <description>A few months ago, I saw this really cool YouTube video demonstrating a simulation of evolution through natural selection, and it blew my mind. As such, I thought it&amp;rsquo;d be a good idea to try and recreate the system, and here we are. It&amp;rsquo;s been quite a while since I decided to do this, and there have been a lot of weird hitches and changes. But I eventually reached a decent point in the project and thought it&amp;rsquo;d be a good idea to write about it.</description>
      <content>&lt;p&gt;A few months ago, I saw this really cool &lt;a href=&#34;https://www.youtube.com/watch?v=N3tRFayqVtk&amp;t=1366s&#34;&gt;YouTube video&lt;/a&gt; demonstrating a simulation of evolution through natural selection, and it blew my mind. As such, I thought it&amp;rsquo;d be a good idea to try and recreate the system, and here we are. It&amp;rsquo;s been quite a while since I decided to do this, and there have been a lot of weird hitches and changes. But I eventually reached a decent point in the project and thought it&amp;rsquo;d be a good idea to write about it.&lt;/p&gt;
&lt;h2 id=&#34;so-what-is-evo&#34;&gt;So&amp;hellip; What is Evo?&lt;/h2&gt;
&lt;p&gt;Evo is a system that simulates natural selection. Well, what is natural selection? It&amp;rsquo;s basically a process where organisms better adapted to their environment tend to survive and reproduce, passing on favorable traits to their offspring. Over generations, this leads to the evolution of populations.&lt;br&gt;
The point of Evo is to try to replicate this digitally, creating a small world where &amp;ldquo;digital organisms&amp;rdquo; evolve to adapt to their environment.&lt;/p&gt;
&lt;p&gt;To simulate natural selection, you need organisms. The way we represent the organisms in this system is with a simple neural net. If you haven&amp;rsquo;t heard of those, a neural net is a system inspired by the human brain. It consists of layers of interconnected nodes (neurons).&lt;/p&gt;
&lt;p&gt;To make organisms from neural nets, we implement them such that the input neurons take in information from the organism&amp;rsquo;s environment (basically its senses), and the output neurons cause the organism to perform an action.&lt;/p&gt;
&lt;p&gt;A string representation of this neural net is called a genome (like in biology), and it completely represents the behavior patterns of the organism. To keep things analogous with biology, a gene in this system is just a connection between neurons in the neural net. This allows us to say that genomes are made of genes, just like we would in biological organisms. Also, because it&amp;rsquo;s not really practical to read through lines of genomes for the organisms in our simulation, we represent each genome as a color such that similar genomes (i.e., similar behavior) are represented with similar colors.&lt;/p&gt;
&lt;p&gt;Now that we&amp;rsquo;re mostly up to speed with how the organisms would work, how would natural selection work in this system?&lt;/p&gt;
&lt;p&gt;First, natural selection is something that occurs over generations, so these organisms would have to reproduce in some way and eventually die off.&lt;br&gt;
Next, the only reason natural selection occurs is that there&amp;rsquo;s some adversity in the system that causes some organisms to die and others to live depending on how they behave.&lt;br&gt;
In this system, the adversity is just having live and die zones in the simulation—basically, parts of the environment where if the organism gets to them, they&amp;rsquo;d live, and if they don&amp;rsquo;t, they&amp;rsquo;d die.&lt;br&gt;
The organisms that don&amp;rsquo;t die get to reproduce sexually. The way this works is that two organisms are selected at random from the environment, and parts of their genomes are combined to create a new genome representing a new organism.&lt;/p&gt;
&lt;p&gt;The hope with this experiment (well, it&amp;rsquo;s more of the expected result because I&amp;rsquo;ve seen it work already) is that by killing off the &amp;ldquo;unfit&amp;rdquo; organisms and allowing the more &amp;ldquo;fit&amp;rdquo; ones to reproduce, we create a pool of organisms whose genetics allow them to easily survive in the environment. And that is called&amp;hellip; &lt;em&gt;drumroll&lt;/em&gt;&amp;hellip; natural selection.&lt;/p&gt;
&lt;h2 id=&#34;how-am-i-building-evo&#34;&gt;How am I building Evo?&lt;/h2&gt;
&lt;p&gt;Well, I&amp;rsquo;m writing it completely in Rust. For the graphics, I initially started using SDL2 but then switched to Bevy (I&amp;rsquo;ll probably write more about why later). I&amp;rsquo;ll add more implementation details as I write more.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>On the Past Little while</title>
      <link>http://localhost:1313/musings/onthepastlittlewhile/</link>
      <pubDate>Sun, 07 Jul 2024 01:00:12 +0100</pubDate>
      
      <guid>http://localhost:1313/musings/onthepastlittlewhile/</guid>
      <description>The spiritual controls the physical. That&amp;rsquo;s how I, like many others around me, have been brought up to live my life—to see everything through the lens of spirituality. Whether you succeeded or failed, your emotions, whether your life was worth anything, whether you got to live the next second or die right now, all of it was determined by your relationship with God. He was the key, the only thing that mattered.</description>
      <content>&lt;p&gt;The spiritual controls the physical. That&amp;rsquo;s how I, like many others around me, have been brought up to live my life—to see everything through the lens of spirituality. Whether you succeeded or failed, your emotions, whether your life was worth anything, whether you got to live the next second or die right now, all of it was determined by your relationship with God. He was the key, the only thing that mattered. He had all the answers, and all you needed to do was just love and serve Him.&lt;/p&gt;
&lt;p&gt;For a while now, I&amp;rsquo;ve been moving away from all that. In some ways, maybe I was never really fully in it to begin with. It&amp;rsquo;s left me with a lot on my mind&lt;/p&gt;
&lt;p&gt;I guess the first thing is why, and it&amp;rsquo;s something that becomes more confusing when I think about my background. Why does one person believe and another move away? I think it&amp;rsquo;s more than just facts and logic or what is absolutely true. The information is usually always right there, and there will always be things that are out of our control, but we just have very different ways of making sense of it.&lt;/p&gt;
&lt;p&gt;The other thing is how—how I&amp;rsquo;m going to keep doing this? How it feels? It feels kind of lonely, at least for me. The thing is, religion and belief aren&amp;rsquo;t something you just take off and put on Sundays. It&amp;rsquo;s a way you fundamentally view the world, and when everyone around you is spiritual, you instantly become the odd one out. Through the lens of spirituality, they see you for what you are: a pagan. At best, they&amp;rsquo;ll tolerate you, maybe try to convert you every once in a while because maybe there&amp;rsquo;s still hope for you. At worst, they&amp;rsquo;ll cut you off—can&amp;rsquo;t be unequally yoked.&lt;/p&gt;
&lt;p&gt;It doesn&amp;rsquo;t always have to be that way, though. It&amp;rsquo;s only a problem if anyone knows. Just put your head down, don&amp;rsquo;t say anything weird, and just pretend. That never killed anyone; what&amp;rsquo;s it going to cost you? Well, I&amp;rsquo;m not sure. Not sure why I&amp;rsquo;m even writing this anyway.&lt;/p&gt;
&lt;p&gt;Maybe I&amp;rsquo;m writing to understand, to find some sense of clarity amidst the confusion, maybe I&amp;rsquo;m wrting because, in this solitude, I hope someone else feels the same way. Perhaps there&amp;rsquo;s comfort in knowing that we&amp;rsquo;re not alone in our questions, that our struggles with faith, or the lack thereof, are part of the human experience. And perhaps, just maybe, that&amp;rsquo;s enough.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Talking about GANS</title>
      <link>http://localhost:1313/scribbles/gantalking/</link>
      <pubDate>Mon, 30 Oct 2023 10:57:12 +0100</pubDate>
      
      <guid>http://localhost:1313/scribbles/gantalking/</guid>
      <description>think of an intro (something about how you haven&amp;rsquo;t done serious ML in a while and you decided to blitz through some GAN papers - maybe talk about how you want to colour manga using GANS (link to the paper) and how the paper didn&amp;rsquo;t make any sense at first)
Before talking about GANS i think it&amp;rsquo;d be cool to talk about how computer scientists frame the problem of generating (data?</description>
      <content>&lt;p&gt;think of an intro
(something about how you haven&amp;rsquo;t done serious ML in a while and you decided to blitz through some GAN papers - maybe talk about how you want to colour manga using GANS (link to the paper) and how the paper didn&amp;rsquo;t make any sense at first)&lt;/p&gt;
&lt;p&gt;Before talking about GANS i think it&amp;rsquo;d be cool to talk about how computer scientists frame the problem of generating (data?)&lt;/p&gt;
&lt;p&gt;we look at sample data(thats the patterns we want to generate as probability distributions) across some domain&lt;/p&gt;
&lt;p&gt;if you&amp;rsquo;re not familiar with the term&lt;/p&gt;
&lt;p&gt;&amp;ndash; drop wikipedia? definition of probability distributions here&lt;/p&gt;
&lt;p&gt;probability distributions are the way we represent the likelihood that some data sample will occur at a point(in some number space)&lt;/p&gt;
&lt;p&gt;an example with the MNIST dataset(if you&amp;rsquo;ve never heard of it it&amp;rsquo;s a dataset of handwritten digits sized 28x28)&lt;/p&gt;
&lt;p&gt;since each image is 28x28 pixels we&amp;rsquo;ve got 784 (values?) for each image&lt;/p&gt;
&lt;p&gt;say we represent that in a coordinate system with 784 dimensions(this isn&amp;rsquo;t something people really do - if we needed to though we&amp;rsquo;d need to use some sort of dimensionality reduction first)&lt;/p&gt;
&lt;p&gt;we&amp;rsquo;d have 784^(784) possible data points that could occur
but not every data point would be MNIST digits
in fact most of it would be noise&lt;/p&gt;
&lt;p&gt;a probability distribution for MNIST basically gives us a value between 0 and 1 for each data point that represents how likely that point is to be a number, kinda like a description
all I&amp;rsquo;d need to do to (generate)? numbers if i had this distribution
is take the data points with a high probability in the distribution&lt;/p&gt;
&lt;p&gt;so in a way we can think of generating taking points from a probability distribution of the items we&amp;rsquo;re trying to generate (that are not included in the training set that we used to somehow do this)&lt;/p&gt;
&lt;p&gt;ok so we&amp;rsquo;re hopefully up to speed..&lt;/p&gt;
&lt;p&gt;Generative Adversarial Networks work by trying to make a new probability distribution that is as similar as possible to the intrinsic distribution of our training data&lt;/p&gt;
&lt;p&gt;since all the information we have about this &amp;ldquo;intrinsic&amp;rdquo; distribution is its samples(our training data) you can also say GANs try to estimate a probability distribution(think a description for out ) from its observed samples&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Replicating v16 spotify recommendation system</title>
      <link>http://localhost:1313/scribbles/v16spotify/</link>
      <pubDate>Mon, 15 May 2023 10:57:12 +0100</pubDate>
      
      <guid>http://localhost:1313/scribbles/v16spotify/</guid>
      <description>the initial model for candidate selection was WRMF(weight regularized matrix factorization)
from the name its pretty easy to assume what it&amp;rsquo;s supposed to be doing
basically matrix factorization as used in regular collaborative filtering problems
where the userxitem ie preferences/ratings or whatever floats your boat is factorized into user and item embeddings that can be used for subsequent predictions
I think the regularization employed here is just for more efficiently learning (something i think is pretty relevant in this case since we&amp;rsquo;ve got like 20k&amp;hellip;.</description>
      <content>&lt;p&gt;the initial model for candidate selection was WRMF(weight regularized matrix factorization)&lt;br&gt;
from the name its pretty easy to assume what it&amp;rsquo;s supposed to be doing&lt;/p&gt;
&lt;p&gt;basically matrix factorization as used in regular collaborative filtering problems&lt;/p&gt;
&lt;p&gt;where the userxitem ie preferences/ratings or whatever floats your boat is factorized into user and item embeddings that can be used for subsequent predictions&lt;/p&gt;
&lt;p&gt;I think the regularization employed here is just for more efficiently learning (something i think is pretty relevant in this case since we&amp;rsquo;ve got like 20k&amp;hellip;..)
the creators of v16 link to a paper that more or less describes their specific approach to WRMF
(Collaborative Filtering for Immediate Feedback Datasets)&lt;/p&gt;
&lt;p&gt;it starts by distinguishing what immediate feedback recommendation problems are and the unique challenges that come as a result&lt;/p&gt;
&lt;p&gt;(can&amp;rsquo;t really do the whole thing that would take forever)&lt;/p&gt;
&lt;p&gt;for the most part,Implicit feedback problems occur when there aren&amp;rsquo;t any explicit(for lack of better word) metrics by which users rank the items that they interact with (usually in the form of a star rating or a ranking or something like that)
instead what you have is just the data on how the user interacts with items , so stuff like how many times they bought something or clickedon a product)&lt;/p&gt;
&lt;p&gt;generating recommendations for users from implicit feedback data is significantly different
one because there isn&amp;rsquo;t any way of quantifying negative preference with the data
(in a ranking system a 1 star rating means the user probably dislikes the product but there&amp;rsquo;s no such thing as negatively clicking a lick)&lt;/p&gt;
&lt;p&gt;and then there&amp;rsquo;s also the fact that these kinds of data tend to be more noisy because not all interactions might come from the user
(this is something that is largely mitigated with rating systems because most people ranking and starring products are doing it to show their personal preference in some way and would rarely bother ranking when someone else is involved)&lt;/p&gt;
&lt;p&gt;lastly is just the increase in the overall complexity of the model for solving the problem
with a simple numerical rating the problem is just to predict a specific score and
the metrics for model success are pretty clear
something like root mean square could probably suffice&lt;/p&gt;
&lt;p&gt;with Implicit feedback it&amp;rsquo;s a little different
since we&amp;rsquo;re working with user interactions
the model is predicting the likelihood of the user performing a certain interaction
for all possible interactions&lt;/p&gt;
&lt;p&gt;(that means we&amp;rsquo;ll have to consider things like availability of the item(whether the interaction can even happen in the first place),
competition with other items, and repeat feedback(not quite sure what this is))&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>You Did This</title>
      <link>http://localhost:1313/writing/youdidthis/</link>
      <pubDate>Mon, 30 Jan 2023 10:57:12 +0100</pubDate>
      
      <guid>http://localhost:1313/writing/youdidthis/</guid>
      <description>I wish I could remember like it was yesterday, all I really remember are flashes, flashes of the most horrible moments of my life.
I&amp;rsquo;d just finished evening lessons and I had to go back home, it was the same old routine, I&amp;rsquo;d done this for about three years, pick my little sister and take the A11 bus back home .On the way back we&amp;rsquo;d meet Brad, he&amp;rsquo;s this guy from the prep school next to mine that I&amp;rsquo;ve been dating for a while.</description>
      <content>&lt;p&gt;I wish I could remember like it was yesterday, all I really remember are flashes, flashes of the most horrible moments of my life.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d just finished evening lessons and I had to go back home, it was the same old routine, I&amp;rsquo;d done this for about three years, pick my little sister and take the A11 bus back home .On the way back we&amp;rsquo;d meet Brad, he&amp;rsquo;s this guy from the prep school next to mine that I&amp;rsquo;ve been dating
for a while.&lt;/p&gt;
&lt;p&gt;He&amp;rsquo;s really nice and I enjoy talking with him. we&amp;rsquo;d get to the crossing and my sister would beg for me to let her cross the road alone because she was 9 now and a big girl and everyday I&amp;rsquo;d say
&amp;ldquo;absolutely not&amp;rdquo;&lt;/p&gt;
&lt;p&gt;That day was different
She does the weird cute eyes thing. I really love those tiny eyes. Brad joins her too. I look at the road and it seems pretty ok, what&amp;rsquo;s the worst that could happen.&lt;/p&gt;
&lt;p&gt;I tell her she can go but to be careful and that it was a one-time thing, mom would kill me if she found out.&lt;/p&gt;
&lt;p&gt;She darts across the road and I instantly realize what&amp;rsquo;s about to happen. I drop my bag and sprint after her, Brad runs after me.&lt;/p&gt;
&lt;p&gt;I trip and fall
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
FLASH
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
I think I jammed my knee, I can&amp;rsquo;t get up, I hear the brakes on the truck screech and people around are screaming
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
FLASH
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
I think the truck just made impact. I hear the soft screeching of human flesh against the tarmac. She probably got caught under the bumper.&lt;/p&gt;
&lt;p&gt;Brad runs toward the truck
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
FLASH
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
I see the blood trail her body leaves, I have to get up, I have to help her, she has to be ok, I try to pry myself up on my other leg but i fall again
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
FLASH
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
My head hits hard on the road, Brad is back at my side, what is he doing here, why isn&amp;rsquo;t he helping her. I lose consciousness as the effect of the hit starts to sink.&lt;/p&gt;
&lt;p&gt;As I slip into the darkness I realize what had just happened, what I&amp;rsquo;d just done&lt;/p&gt;
&lt;p&gt;I had killed my sister&lt;/p&gt;
&lt;p&gt;I wake up on a hospital bed, I must have been out for a few hours. My mother is sitting next to me, her eyes are swollen red, she&amp;rsquo;s definetely
been crying, she holds my hand and says&lt;/p&gt;
&lt;p&gt;it&amp;rsquo;ll be ok. I already know the bad news. my sister was gone, she was gone forever, I&amp;rsquo;d never see her again
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
Except she was right there&lt;/p&gt;
&lt;p&gt;standing at the foot of the bed, her clothes were ripped and bloodied from the road, and her left side had been completely mangled.&lt;/p&gt;
&lt;p&gt;One arm had been completely severed, and her left eye socket was an
empty, gaping hole. Her skin was covered in deep cuts and abrasions, and dried blood and grime filled the hollows of her face.&lt;/p&gt;
&lt;p&gt;She looked at me with her one remaining eye, her face contorted in pain, and said the words that have echoed in my mind ever since: &amp;ldquo;You did this to me.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s been 13 years since then, I&amp;rsquo;m 29 now and my sister still hasn&amp;rsquo;t left, she&amp;rsquo;s always there, standing across from me while I eat, taking the same cab rides as me, sitting on the road at the spot where she
died each time saying the all too familiar words &amp;ldquo;you did this to me&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I wonder why she still bothers with that. I definitely don&amp;rsquo;t need anyone to remind me.&lt;/p&gt;
&lt;p&gt;I blame myself every day. I wish I&amp;rsquo;d gone instead of her, I wish I didn&amp;rsquo;t listen to Brad. That all doesn&amp;rsquo;t matter now does it?
none of it matters anymore&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been to a few doctors since the incident and I&amp;rsquo;ve been diagnosed with a lot of things, PTSD&amp;rsquo;s at the top of the list, recently, I&amp;rsquo;ve been seeing this therapist who thinks we can work out my problems and that life can go back to &amp;ldquo;normal&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I told her about how my sister keeps me company and she says it would be great if I took meds to help with my &amp;ldquo;hallucinations&amp;rdquo; because &amp;ldquo;getting rid of them is a very important thing for my healing
process&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The thing is, I don&amp;rsquo;t want to feel better, I dont want to forget, I need to remember every day, every second, what I did to her, how I killed her. I can never forget, I must never forget.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s 2:00am in the morning and it&amp;rsquo;s a little chilly, I&amp;rsquo;ve been talking to my sister pretty often for the past few days. She&amp;rsquo;s come up with the perfect plan to make me pay for my actions and today is the
day we we&amp;rsquo;re doing it.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve got my rope and the conveniently placed ceiling fan in my
bedroom all ready to go – hanging, how cliche.&lt;/p&gt;
&lt;p&gt;Turns out it&amp;rsquo;s actually one of the more painless ways to die, once you&amp;rsquo;ve gotten past all the choking.&lt;/p&gt;
&lt;p&gt;I tighten the noose around my neck and the hook of the fan while my sister smiles behind me urging me on, I&amp;rsquo;m glad I can finally make her happy, glad I can finally atone for my sin. I signal to her that I&amp;rsquo;m ready, she nods and kicks the chair under me&lt;/p&gt;
&lt;p&gt;I fall and well&amp;hellip;
you know the rest&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Burn The Future I</title>
      <link>http://localhost:1313/musings/burnthefuture/</link>
      <pubDate>Wed, 07 Dec 2022 01:00:12 +0100</pubDate>
      
      <guid>http://localhost:1313/musings/burnthefuture/</guid>
      <description>It&amp;rsquo;s pretty late, and I&amp;rsquo;m typing on my old tactile switch keyboard while thinking (well, I&amp;rsquo;ve been thinking) about my future. I feel like my perspective on my ideal future has changed a lot since I started school (which is crazy, considering it has only been a bit more than two years).
What I first pictured for myself was the life of a successful entrepreneur with lots of control, money, and influence.</description>
      <content>&lt;p&gt;It&amp;rsquo;s pretty late, and I&amp;rsquo;m typing on my old tactile switch keyboard while thinking (well, I&amp;rsquo;ve been thinking) about my future. I feel like my perspective on my ideal future has changed a lot since I started school (which is crazy, considering it has only been a bit more than two years).&lt;/p&gt;
&lt;p&gt;What I first pictured for myself was the life of a successful entrepreneur with lots of control, money, and influence. All I needed to do was to be extremely good at what I do (which happens to be programming), get a really great job first, and then build a startup that blows up, makes me a lot of money, becomes a big business, and gives me influence. I could do the things I want with maximum freedom and live my life without monetary limits, and so on. I didn&amp;rsquo;t really choose to run a business because it had any specific appeal to me; I mostly chose it because it seemed like the most surefire way to achieve the goals I had in mind.&lt;/p&gt;
&lt;p&gt;So what changed? It&amp;rsquo;s challenging to pinpoint exactly. I think the first thing that changed was the feasibility of it all. I started to come to terms with how oddly difficult life could be and how I wasn&amp;rsquo;t as good at some things as I thought I was. There&amp;rsquo;s a lot more that went into this (for instance, how I had serious problems with specialization), but I don&amp;rsquo;t think I have the strength to type all of that out.&lt;/p&gt;
&lt;p&gt;In retrospect, it seems a little like I gave up and quit on my big dreams. Did I?&lt;/p&gt;
&lt;p&gt;The other main reason I changed is the more impactful one and, for the most part, why I&amp;rsquo;m writing this.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d never really stopped to ask myself what I wanted out of life. Not the cliché stuff like lots of money and lots of freedom (everybody wants that), but the harder questions that have a lot to do with tradeoffs.&lt;/p&gt;
&lt;p&gt;The thing is, it&amp;rsquo;s really easy to think about your future through the lens of big, haughty dreams where you get to have it all without any cost (except your conveniently placed hard work). But, in reality, life is full of tradeoffs.&lt;/p&gt;
&lt;p&gt;And so, for better or worse, it was important that I picked mine (or is it important? I&amp;rsquo;m not done picking yet).&lt;/p&gt;
&lt;p&gt;So the question then is, since I can&amp;rsquo;t have it all, what were the most important things I wanted to have? You should probably note here that I&amp;rsquo;m by no means considering myself incompetent or trying to settle for anything less than the best possible version of my life. I just think it&amp;rsquo;s necessary for me to more clearly understand what I&amp;rsquo;m working toward, and this is a way of establishing my priorities.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Dr Cow</title>
      <link>http://localhost:1313/musings/drcow/</link>
      <pubDate>Mon, 03 Oct 2022 12:46:12 +0100</pubDate>
      
      <guid>http://localhost:1313/musings/drcow/</guid>
      <description>If only I wasn’t in this class
I’d be out on the streets making cash
I’d go on trips above and beyond
With the ones I love, staying out in the sun
But sadly I’m stuck in this room right now
With my least favorite teacher in the world dr cow
Here seconds pass by like they were years
And the distinct murmuring aches my ears
Maybe if I think about a life</description>
      <content>&lt;p&gt;If only I wasn’t in this class&lt;br&gt;
I’d be out on the streets making cash&lt;br&gt;
I’d go on trips above and beyond&lt;br&gt;
With the ones I love, staying out in the sun&lt;br&gt;
But sadly I’m stuck in this room right now&lt;br&gt;
With my least favorite teacher in the world dr cow&lt;br&gt;
Here seconds pass by like they were years&lt;br&gt;
And the distinct murmuring aches my ears&lt;br&gt;
Maybe if I think about a life&lt;br&gt;
Or decide to end mine with a very sharp knife&lt;br&gt;
I’d at last be saved from harrowing hell&lt;br&gt;
Or at least find an excuse to stay in my cell&lt;br&gt;
Is it just me or does this class drive you mad&lt;br&gt;
It’s probably just the stomach ache making me sad&lt;br&gt;
Well , I guess that’s all for now&lt;br&gt;
Final words for my least favorite teacher Dr Cow&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>About me (Circa 2022)</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>I&amp;rsquo;m Abundance, I&amp;rsquo;m a random person (aren&amp;rsquo;t we all) //say something cool about being a programmer
I like knowing stuff and talking about it
also like to solve complex problems
Stuff I know Computers. This probably goes without saying, but i think computers are really cool,
I enjoy learning about how computers work under the hood ( you know, computer architecture and stuff)
I also try to build a few low level projects when i can InshAllah</description>
      <content>&lt;p&gt;I&amp;rsquo;m Abundance, I&amp;rsquo;m a random person (aren&amp;rsquo;t we all) &lt;br&gt;
//say something cool about being a programmer&lt;br&gt;
I like knowing stuff and talking about it&lt;br&gt;
also like to solve complex problems&lt;/p&gt;
&lt;h1 id=&#34;stuff-i-know&#34;&gt;Stuff I know&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Computers. This probably goes without saying, but i think computers are really cool,&lt;br&gt;
I enjoy learning about how computers work under the hood (
you know, computer architecture and stuff)&lt;br&gt;
I also try to build a few low level projects when i can InshAllah&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rust. been learning this for some time, I try implementing some fairly complex projects every once in a while &lt;br&gt;
you should check them out&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Machine Learning. specifically know a lot about deep learning (gotta prepare for our AI overlords)
work mostly with Pytorch(I&amp;rsquo;m pretty good with python)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know lots of theory about random systems(mostly from &lt;del&gt;failed&lt;/del&gt; developing projects) &lt;br&gt;
notably there&amp;rsquo;s TCP/IP(just network stuff in general), git internals and operating systems&lt;br&gt;
&amp;ndash; this isn&amp;rsquo;t really an exhaustive list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web Development - Kinda hate it but it pays i guess, mostly use React or Next for frontend (all in Typescript of course) and Express&lt;br&gt;
FastApi/Flask or django for backend&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;other-stuff&#34;&gt;Other Stuff&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I read a lot of books on a lot of topics&lt;br&gt;
mostly never finish them (curse my short attention span 😭)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I&amp;rsquo;m really into music &lt;br&gt;
like reaaaaaally into music &lt;br&gt;
literally catalog my memories by song &lt;br&gt;
I like mostly pop, 80&amp;rsquo;s, and chill indie stuff &lt;br&gt;
but I&amp;rsquo;ll listen to anything really&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I dabble in writing every once in a while(mostly when i&amp;rsquo;m really bored)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;interested in cooking(sort of suck at it for now 😫)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;umm-what-else&#34;&gt;umm what else?&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;favourite thing to do &lt;br&gt;
read a book(fiction, alternative reality, mind fucking)&lt;br&gt;
while listening to nice music and feeling happy with my life &lt;br&gt;
not something i do very often tho&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A pretty close second is sharing fun moments with friends&lt;br&gt;
(i&amp;rsquo;ve got really cool friends)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I love to spend money &lt;br&gt;
send me money please 🙂&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;find-me&#34;&gt;Find me&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;on &lt;a href=&#34;https://github.com/abundance-io/&#34;&gt;Github&lt;/a&gt; please dont judge me 🙈&lt;/li&gt;
&lt;li&gt;on &lt;a href=&#34;https://twitter.com/aybdee&#34;&gt;Twitter&lt;/a&gt;. I never post :)&lt;/li&gt;
&lt;li&gt;Email me &lt;a href=&#34;mailto:abundanceanyanwu@gmail.com&#34;&gt;abundanceanyanwu@gmail.com&lt;/a&gt;. I&amp;rsquo;ll probably respond in a few years(except you&amp;rsquo;re a potential employer
then consider me responded)&lt;/li&gt;
&lt;li&gt;Discord aybdee&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
